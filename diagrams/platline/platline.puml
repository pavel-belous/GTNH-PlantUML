@startuml
scale 1
'skinparam linetype polyline
'skinparam linetype ortho
left to right direction
skinparam rectangle {
    BackgroundColor<<HV>> #ADABBC
    BackgroundColor<<EV>> #D79DE4
    BackgroundColor<<IV>> #625D98
}

' debug flag
' %true() - display ports names, useful for creating connections
' %false() - dont display ports names
!$DEBUG = %true()

'-----------Functions--------------------------------------------
!function $getGTcircuitImage($circuitNo=0)
   !return "<img:../../lib/resources/gregtech/textures/items/gt.integrated_circuit/"+$circuitNo+".png>"
!endfunction

'-----------Procedures-------------------------------------------

!procedure $drawMachines()
    !$fullMachineName = $machineName+$machineNumber
    !$machines = %load_json("platline.json")
    !$machineNumber = 0
    !$inputNumber = 0
    !$outputNumber = 0
    !foreach $machine in $machines
        !$machineNumber = $machineNumber + 1
        !$fullMachineName = $machine.name + $machineNumber
        !$tier = $machine.tier
        !$circuit = $machine.circuit
        !$rectangleName = %string("rec"+$fullMachineName)
        rectangle " " as $fullMachineName {
            rectangle "$machine.name $getGTcircuitImage($circuit)" <<$tier>>  as $rectangleName  {
            }
            !foreach $input in $machine.inputs
                !$inputNumber = $inputNumber + 1
                !$portInName = %string("pi"+$inputNumber)
                !if ($DEBUG)
                    portin "$portInName" as $portInName
                !else
                    portin " " as $portInName
                !endif
                $portInName --# $rectangleName: $input.name\n$input.amount
            !endfor

            !foreach $output in $machine.outputs
                !$outputNumber = $outputNumber + 1
                !$portOutName = %string("po"+$outputNumber)
                !if ($DEBUG)
                    portout "$portOutName" as $portOutName
                !else
                    portout " " as $portOutName
                !endif
                $rectangleName #---- $portOutName: $output.name\n$output.amount
            !endfor
      }
    !endfor
!endprocedure

' since preprocessor doesnt have arrays
' there's no easy way to calculate and draw connections automatically
!procedure $drawConnections()
    'rhodium
    po1 -- pi4
    po2 -- pi6
    po4 --pi8
    po7 -- pi9
    po9 -- pi12
    po13 -- pi15
    po14 -- pi18
    po15 -- pi21
    po19 -- pi22
    po20 -- pi24
    po21 -- pi25
    po17 -- pi17
    'recycle
    po8 .left. pi11
    po10 .down. pi10

    'palladium
    po25 -- pi28
    po26 -- pi29
    po28 -- pi43
    po29 -- pi36
    po32 -- pi37
    po33 -- pi44
    po34 -- pi39
    po37 -- pi42
    po30 -- pi35
    po39 -- pi33
    po38 -- pi38
    po36 -- pi41
    po35 -- pi40

    'ruthenium
    po44 -- pi48
    po46 -- pi51
    po47 -- pi52
    po50 -- pi53
    po51 -- pi54

    'rarest metal
    po45 -- pi56

    'osmium
    po56 -- pi58
    po57 -- pi59

    'iridium
    po55 -- pi61
    po62 -- pi62
    po64 -- pi64
    po65 -- pi66
    po69 -- pi68
    po70 -- pi69
    po71 .. pi67

    'connect leach residue with iridium/osmium lines
    po3 -- pi45
!endprocedure

'-----------Draw Diagram Section---------------------------------

$drawMachines()
$drawConnections()

@enduml